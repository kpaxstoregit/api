generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  name      String
  role      Role     @default(CLIENT)
  isPremium Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  resetToken           String?
  resetTokenExpiration DateTime?

  profile       Profile?
  affiliate     Affiliate?
  refreshTokens RefreshToken[]
  PasswordReset PasswordReset[]
}

model RefreshToken {
  id        String   @id @default(uuid()) @db.Uuid
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  expiresAt DateTime
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Profile {
  id     String  @id @default(uuid()) @db.Uuid
  bio    String?
  userId String  @unique @db.Uuid
  user   User    @relation(fields: [userId], references: [id])
}

model PasswordReset {
  id        String   @id @default(uuid())
  token     String   @unique
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  createdAt DateTime @default(now())
}

model Affiliate {
  id             String @id @default(uuid()) @db.Uuid
  userId         String @unique @db.Uuid
  user           User   @relation(fields: [userId], references: [id])
  code           String @unique
  commissionRate Float
}

enum Role {
  ADMIN
  CLIENT
  AFFILIATE
  PREMIUM_CLIENT
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  weight      Float
  stock       Int
  category    String
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Contact {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model Newsletter {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  createdAt DateTime @default(now())
}
